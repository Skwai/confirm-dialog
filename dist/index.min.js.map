{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["const DEFAULTS = {\n  cancelLabel: 'Cancel',\n  canCancel: true,\n  className: 'ConfirmDialog',\n  confirmLabel: 'Confirm',\n  message: null,\n  onCancel: () => {},\n  onConfirm: () => {},\n  parent: document.body,\n  title: 'Please Confirm',\n};\n\nconst ESCAPE_KEYCODE = 27;\n\nexport default class ConfirmDialog {\n  constructor(args) {\n    this.opts = Object.assign({}, DEFAULTS, args);\n    this.cancelled = false;\n    this.destroyed = false;\n    this.loading = false;\n    if (!(this.opts.parent instanceof Node)) {\n      throw Error('`parent` is not a valid `HTMLElement`');\n    }\n    Object.assign(this, {\n      handleConfirm: this.handleConfirm.bind(this),\n      handleCancel: this.handleCancel.bind(this),\n      handleEscape: this.handleEscape.bind(this),\n    });\n    this.render();\n  }\n\n  render() {\n    if (this.element) {\n      throw Error('Cannot render, `this.element` already exists');\n    }\n    this.element = document.createElement('div');\n    this.element.classList.add(this.opts.className);\n    this.element.innerHTML = this.template(this.opts);\n    this.confirmButton = this.getConfirmButton();\n    this.cancelButton = this.getCancelButton();\n    this.opts.parent.appendChild(this.element);\n    this.bindListeners();\n  }\n\n  destroy() {\n    this.unbindListeners();\n    if (this.element instanceof Node && !this.destroyed) {\n      this.element.parentNode.removeChild(this.element);\n      delete this.element;\n      this.destroyed = true;\n    }\n    return this.destroyed;\n  }\n\n  handleEscape(ev) {\n    if (ev.keyCode === ESCAPE_KEYCODE) {\n      this.handleCancel(ev);\n    }\n  }\n\n  getConfirmButton() {\n    this.confirmButton = this.confirmButton || this.element.querySelector(`.${this.opts.className}__Confirm`);\n    return this.confirmButton;\n  }\n\n  getCancelButton() {\n    this.cancelButton = this.cancelButton || this.element.querySelector(`.${this.opts.className}__Cancel`);\n    return this.cancelButton;\n  }\n\n  bindListeners() {\n    const { element: el, cancelButton, confirmButton } = this;\n    this.getConfirmButton().addEventListener('click', this.handleConfirm);\n    if (this.opts.canCancel) {\n      el.addEventListener('click', (ev) => ev.target.isSameNode(el) ? this.handleCancel() : ev);\n      window.addEventListener('keyup', this.handleEscape);\n      this.getCancelButton().addEventListener('click', this.handleCancel);\n    }\n  }\n\n  unbindListeners() {\n    window.removeEventListener('keyup', this.handleEscape);\n  }\n\n  confirm() {\n    return this.handleConfirm();\n  }\n\n  cancel() {\n    return this.handleCancel();\n  }\n\n  async handleCancel(ev) {\n    if (!this.opts.canCancel || this.loading) {\n      return;\n    }\n    this.loading = true;\n    await this.opts.onCancel(ev);\n    this.loading = false;\n    this.destroy();\n    return true;\n  }\n\n  async handleConfirm(ev) {\n    if (this.loading) {\n      return false;\n    }\n    this.loading = true;\n    await this.opts.onConfirm(ev);\n    this.loading = false;\n    this.destroy();\n    return true;\n  }\n\n  template({\n    canCancel,\n    cancelLabel,\n    className: cn,\n    confirmLabel,\n    message,\n    title,\n  }) {\n    return `\n      <div\n        class=\"${cn}__Content\"\n        role=\"alertdialog\"\n        aria-hidden=\"false\"\n        aria-labelledby=\"\"\n        aria-describedby=\"\"\n      >\n        <header class=\"${cn}__Header\">\n          <h4 class=\"${cn}__Title\">${title}</h4>\n        </header>\n        ${message ? `<div class=\"${cn}__Message\">${message}</div>` : ''}\n        <footer class=\"${cn}__Actions\">\n          ${confirmLabel ? `<button type=\"button\" class=\"${cn}__Confirm\">${confirmLabel}</button>` : ''}\n          ${canCancel ? `<button type=\"button\" class=\"${cn}__Cancel\">${cancelLabel}</button>` : ''}\n        </footer>\n      </div>\n    `;\n  }\n}\n"],"names":["DEFAULTS","document","body","args","opts","Object","assign","cancelled","destroyed","loading","this","parent","Node","Error","handleConfirm","bind","handleCancel","handleEscape","render","element","createElement","classList","add","className","innerHTML","template","confirmButton","getConfirmButton","cancelButton","getCancelButton","appendChild","bindListeners","unbindListeners","parentNode","removeChild","ev","keyCode","querySelector","el","addEventListener","canCancel","target","isSameNode","_this","removeEventListener","_this2","onCancel","destroy","_this5","onConfirm","cancelLabel","cn","confirmLabel","message","title"],"mappings":";;;;;;ihBAAMA,eACS,oBACF,YACA,6BACG,kBACL,cACC,uBACC,oBACHC,SAASC,WACV,+CAMKC,qBACLC,KAAOC,OAAOC,UAAWN,EAAUG,QACnCI,WAAY,OACZC,WAAY,OACZC,SAAU,IACTC,KAAKN,KAAKO,iBAAkBC,YAC1BC,OAAM,gDAEPP,OAAOI,oBACGA,KAAKI,cAAcC,KAAKL,mBACzBA,KAAKM,aAAaD,KAAKL,mBACvBA,KAAKO,aAAaF,KAAKL,aAElCQ,uDAIDR,KAAKS,aACDN,OAAM,qDAETM,QAAUlB,SAASmB,cAAc,YACjCD,QAAQE,UAAUC,IAAIZ,KAAKN,KAAKmB,gBAChCJ,QAAQK,UAAYd,KAAKe,SAASf,KAAKN,WACvCsB,cAAgBhB,KAAKiB,wBACrBC,aAAelB,KAAKmB,uBACpBzB,KAAKO,OAAOmB,YAAYpB,KAAKS,cAC7BY,8DAIAC,kBACDtB,KAAKS,kBAAmBP,QAASF,KAAKF,iBACnCW,QAAQc,WAAWC,YAAYxB,KAAKS,eAClCT,MAAKS,aACPX,WAAY,GAEZE,KAAKF,+CAGD2B,GA1CQ,KA2CfA,EAAGC,cACApB,aAAamB,0DAKfT,cAAgBhB,KAAKgB,eAAiBhB,KAAKS,QAAQkB,kBAAkB3B,KAAKN,KAAKmB,uBAC7Eb,KAAKgB,oEAIPE,aAAelB,KAAKkB,cAAgBlB,KAAKS,QAAQkB,kBAAkB3B,KAAKN,KAAKmB,sBAC3Eb,KAAKkB,gEAIKU,EAAoC5B,KAA7CS,OAA6CT,MAAhCkB,aAAgClB,KAAlBgB,mBAC9BC,mBAAmBY,iBAAiB,QAAS7B,KAAKI,eACnDJ,KAAKN,KAAKoC,cACTD,iBAAiB,QAAS,SAACJ,SAAOA,GAAGM,OAAOC,WAAWJ,GAAMK,EAAK3B,eAAiBmB,WAC/EI,iBAAiB,QAAS7B,KAAKO,mBACjCY,kBAAkBU,iBAAiB,QAAS7B,KAAKM,gEAKjD4B,oBAAoB,QAASlC,KAAKO,sDAIlCP,MAAKI,uDAILJ,MAAKM,oDAGKmB,0DACZU,EAAKzC,KAAKoC,YAAaK,EAAKpC,0DAG5BA,SAAU,EACToC,EAAKzC,KAAK0C,SAASX,8BACpB1B,SAAU,IACVsC,WACE,+DAGWZ,8DACda,EAAKvC,oDAGJA,SAAU,EACTuC,EAAK5C,KAAK6C,UAAUd,8BACrB1B,SAAU,IACVsC,WACE,gEAIPP,KAAAA,UACAU,IAAAA,YACWC,IAAX5B,UACA6B,IAAAA,aACAC,IAAAA,8CAKaF,mKAMQA,sCACFA,gBAXnBG,4CAaMD,iBAAyBF,gBAAgBE,WAAkB,gCAC5CF,6BACbC,kCAA+CD,gBAAgBC,cAA0B,oBACzFZ,kCAA4CW,eAAeD,cAAyB"}